-- WindUI
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local CurrentCamera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

-- Gradient function
function gradient(text, startColor, endColor)
    local result = ""
    local length = #text

    for i = 1, length do
        local t = (i - 1) / math.max(length - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        local char = text:sub(i, i)
        result = result .. "<font color=\"rgb(" .. r ..", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
    end
    return result
end

-- Confirmation popup
local Confirmed = false
WindUI:Popup({
    Title = gradient("SNT HUB", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Icon = "info",
    Content = gradient("This script made by", Color3.fromHex("#10eb3c"), Color3.fromHex("#67c97a")) .. gradient(" SnowT", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Buttons = {
        {
            Title = gradient("Cancel", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
            Callback = function() end,
            Variant = "Tertiary",
        },
        {
            Title = gradient("Load", Color3.fromHex("#90f09e"), Color3.fromHex("#13ed34")),
            Callback = function() Confirmed = true end,
            Variant = "Secondary",
        }
    }
})

repeat task.wait() until Confirmed

WindUI:Notify({
    Title = gradient("SNT HUB", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Content = "Скрипт успешно загружен!",
    Icon = "check-circle",
    Duration = 3,
})

-- Window
local Window = WindUI:CreateWindow({
    Title = gradient("SNT&MirrozzScript [Beta]", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Icon = "infinity",
    Author = gradient("Murder Mystery 2", Color3.fromHex("#1bf2b2"), Color3.fromHex("#1bcbf2")),
    Folder = "WindUI",
    Size = UDim2.fromOffset(300, 270),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    UserEnabled = true,
    HasOutline = true,
})

-- Open Button
Window:EditOpenButton({
    Title = "Open UI",
    Icon = "monitor",
    CornerRadius = UDim.new(2, 6),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("1E213D"),
        Color3.fromHex("1F75FE")
    ),
    Draggable = true,
})

-- Tabs
local Tabs = {
    EspTab = Window:Tab({ Title = gradient("ESP", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "eye" }),
}

-- ESP Configuration
local ESPConfig = {
    HighlightMurderer = false,
    HighlightInnocent = false,
    HighlightSheriff = false,
    HighlightGunDrop = false,
    NameEspMurderer = false,
    NameEspInnocent = false,
    NameEspSheriff = false,
    NameEspGunDrop = false,
    DistanceEspMurderer = false,
    DistanceEspInnocent = false,
    DistanceEspSheriff = false,
    DistanceEspGunDrop = false,
    EspTextSize = 18,
    HighlightTransparency = 0.5
}

local Murder, Sheriff, Hero, Innocent
local roles = {}
local GunDrop = nil
local NameTags = {}
local DistanceTags = {}

-- Map list for GunDrop detection
local Maps = {
    "ResearchFacility",
    "Hospital3",
    "MilBase",
    "House2",
    "Workplace",
    "Mansion2",
    "BioLab",
    "Hotel",
    "Factory",
    "Bank2",
    "PoliceStation"
}

function CreateHighlight(instance, color)
    if instance and not instance:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = instance
        highlight.Adornee = instance
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.FillColor = color
        highlight.OutlineColor = color
        highlight.FillTransparency = ESPConfig.HighlightTransparency
        highlight.Enabled = true
        return highlight
    end
    return instance and instance:FindFirstChild("Highlight")
end

function CreateNameTag(player, text, color)
    if player.Character and not NameTags[player] then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "NameEsp"
        billboard.Adornee = player.Character:FindFirstChild("Head")
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = player.Character

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = text
        textLabel.TextColor3 = color
        textLabel.TextScaled = false
        textLabel.TextSize = ESPConfig.EspTextSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = billboard

        NameTags[player] = billboard
    end
end

function CreateDistanceTag(player, color)
    if player.Character and not DistanceTags[player] then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "DistanceEsp"
        billboard.Adornee = player.Character:FindFirstChild("Head")
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = player.Character

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "0 studs"
        textLabel.TextColor3 = color
        textLabel.TextScaled = false
        textLabel.TextSize = ESPConfig.EspTextSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = billboard

        DistanceTags[player] = billboard
    end
end

function CreateGunDropEsp(gun, type)
    if gun and not NameTags[gun] and type == "Name" then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "GunDropNameEsp"
        billboard.Adornee = gun
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = gun

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "Gun Drop"
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        textLabel.TextScaled = false
        textLabel.TextSize = ESPConfig.EspTextSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = billboard

        NameTags[gun] = billboard
    elseif gun and not DistanceTags[gun] and type == "Distance" then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "GunDropDistanceEsp"
        billboard.Adornee = gun
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 1, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = gun

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "0 studs"
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        textLabel.TextScaled = false
        textLabel.TextSize = ESPConfig.EspTextSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = billboard

        DistanceTags[gun] = billboard
    end
end

function RemoveAllEsp()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character then
            if player.Character:FindFirstChild("Highlight") then
                player.Character.Highlight:Destroy()
            end
            if NameTags[player] then
                NameTags[player]:Destroy()
                NameTags[player] = nil
            end
            if DistanceTags[player] then
                DistanceTags[player]:Destroy()
                DistanceTags[player] = nil
            end
        end
    end
    if GunDrop then
        if GunDrop:FindFirstChild("Highlight") then
            GunDrop.Highlight:Destroy()
        end
        if NameTags[GunDrop] then
            NameTags[GunDrop]:Destroy()
            NameTags[GunDrop] = nil
        end
        if DistanceTags[GunDrop] then
            DistanceTags[GunDrop]:Destroy()
            DistanceTags[GunDrop] = nil
        end
    end
end

function IsAlive(player)
    for name, data in pairs(roles) do
        if player.Name == name then
            return not data.Killed and not data.Dead
        end
    end
    return false
end

function UpdateRoles()
    roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    for name, data in pairs(roles) do
        if data.Role == "Murderer" then
            Murder = name
        elseif data.Role == "Sheriff" then
            Sheriff = name
        elseif data.Role == "Hero" then
            Hero = name
        elseif data.Role == "Innocent" then
            Innocent = name
        end
    end
end

function FindGunDrop()
    for _, mapName in ipairs(Maps) do
        local map = Workspace:FindFirstChild(mapName)
        if map then
            local gun = map:FindFirstChild("GunDrop")
            if gun then
                return gun
            end
        end
    end
    return nil
end

function UpdateEsp()
    -- Update GunDrop
    GunDrop = FindGunDrop()

    -- Update Player ESP
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            local shouldHighlight = false
            local color = Color3.new(0, 1, 0)

            -- Murderer ESP
            if player.Name == Murder and IsAlive(player) then
                if ESPConfig.HighlightMurderer then
                    color = Color3.fromRGB(255, 0, 0)
                    shouldHighlight = true
                    highlight = CreateHighlight(player.Character, color)
                    if highlight then
                        highlight.FillTransparency = ESPConfig.HighlightTransparency
                    end
                end
                if ESPConfig.NameEspMurderer then
                    CreateNameTag(player, player.Name, Color3.fromRGB(255, 0, 0))
                end
                if ESPConfig.DistanceEspMurderer then
                    CreateDistanceTag(player, Color3.fromRGB(255, 0, 0))
                    if DistanceTags[player] then
                        local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        DistanceTags[player].TextLabel.Text = string.format("%.1f studs", distance)
                    end
                end
            -- Sheriff/Hero ESP
            elseif (player.Name == Sheriff or (player.Name == Hero and not IsAlive(game.Players[Sheriff]))) and IsAlive(player) then
                if ESPConfig.HighlightSheriff then
                    color = Color3.fromRGB(0, 0, 255)
                    shouldHighlight = true
                    highlight = CreateHighlight(player.Character, color)
                    if highlight then
                        highlight.FillTransparency = ESPConfig.HighlightTransparency
                    end
                end
                if ESPConfig.NameEspSheriff then
                    CreateNameTag(player, player.Name, Color3.fromRGB(0, 0, 255))
                end
                if ESPConfig.DistanceEspSheriff then
                    CreateDistanceTag(player, Color3.fromRGB(0, 0, 255))
                    if DistanceTags[player] then
                        local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        DistanceTags[player].TextLabel.Text = string.format("%.1f studs", distance)
                    end
                end
            -- Innocent ESP
            elseif player.Name ~= Murder and player.Name ~= Sheriff and player.Name ~= Hero and IsAlive(player) then
                if ESPConfig.HighlightInnocent then
                    color = Color3.fromRGB(0, 255, 0)
                    shouldHighlight = true
                    highlight = CreateHighlight(player.Character, color)
                    if highlight then
                        highlight.FillTransparency = ESPConfig.HighlightTransparency
                    end
                end
                if ESPConfig.NameEspInnocent then
                    CreateNameTag(player, player.Name, Color3.fromRGB(0, 255, 0))
                end
                if ESPConfig.DistanceEspInnocent then
                    CreateDistanceTag(player, Color3.fromRGB(0, 255, 0))
                    if DistanceTags[player] then
                        local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        DistanceTags[player].TextLabel.Text = string.format("%.1f studs", distance)
                    end
                end
            end

            if highlight and not shouldHighlight then
                highlight.Enabled = false
            end

            if not (ESPConfig.NameEspMurderer or ESPConfig.NameEspSheriff or ESPConfig.NameEspInnocent) and NameTags[player] then
                NameTags[player]:Destroy()
                NameTags[player] = nil
            end
            if not (ESPConfig.DistanceEspMurderer or ESPConfig.DistanceEspSheriff or ESPConfig.DistanceEspInnocent) and DistanceTags[player] then
                DistanceTags[player]:Destroy()
                DistanceTags[player] = nil
            end
        end
    end

    -- Update GunDrop ESP
    if GunDrop then
        if ESPConfig.HighlightGunDrop then
            local highlight = CreateHighlight(GunDrop, Color3.fromRGB(255, 255, 0))
            if highlight then
                highlight.FillTransparency = ESPConfig.HighlightTransparency
            end
        end
        if ESPConfig.NameEspGunDrop then
            CreateGunDropEsp(GunDrop, "Name")
        end
        if ESPConfig.DistanceEspGunDrop then
            CreateGunDropEsp(GunDrop, "Distance")
            if DistanceTags[GunDrop] and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (GunDrop.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                DistanceTags[GunDrop].TextLabel.Text = string.format("%.1f studs", distance)
            end
        end
    end
end

-- ESP Sections and Toggles
Tabs.EspTab:Section({Title = gradient("Murder ESP", Color3.fromHex("#e80909"), Color3.fromHex("#630404"))})
Tabs.EspTab:Toggle({
    Title = gradient("Highlight Murder", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
    Default = false,
    Callback = function(state)
        ESPConfig.HighlightMurderer = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("Murder Name ESP", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
    Default = false,
    Callback = function(state)
        ESPConfig.NameEspMurderer = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("Murder Distance ESP", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
    Default = false,
    Callback = function(state)
        ESPConfig.DistanceEspMurderer = state
        if not state then UpdateEsp() end
    end
})

Tabs.EspTab:Section({Title = gradient("Sheriff ESP", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9"))})
Tabs.EspTab:Toggle({
    Title = gradient("Highlight Sheriff", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Default = false,
    Callback = function(state)
        ESPConfig.HighlightSheriff = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("Sheriff Name ESP", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Default = false,
    Callback = function(state)
        ESPConfig.NameEspSheriff = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("Sheriff Distance ESP", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Default = false,
    Callback = function(state)
        ESPConfig.DistanceEspSheriff = state
        if not state then UpdateEsp() end
    end
})

Tabs.EspTab:Section({Title = gradient("Innocent ESP", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c"))})
Tabs.EspTab:Toggle({
    Title = gradient("Highlight Innocent", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c")),
    Default = false,
    Callback = function(state)
        ESPConfig.HighlightInnocent = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("Innocent Name ESP", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c")),
    Default = false,
    Callback = function(state)
        ESPConfig.NameEspInnocent = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("Innocent Distance ESP", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c")),
    Default = false,
    Callback = function(state)
        ESPConfig.DistanceEspInnocent = state
        if not state then UpdateEsp() end
    end
})

Tabs.EspTab:Section({Title = gradient("GunDrop ESP", Color3.fromHex("#ffff00"), Color3.fromHex("#ccaa00"))})
Tabs.EspTab:Toggle({
    Title = gradient("Highlight GunDrop", Color3.fromHex("#ffff00"), Color3.fromHex("#ccaa00")),
    Default = false,
    Callback = function(state)
        ESPConfig.HighlightGunDrop = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("GunDrop Name ESP", Color3.fromHex("#ffff00"), Color3.fromHex("#ccaa00")),
    Default = false,
    Callback = function(state)
        ESPConfig.NameEspGunDrop = state
        if not state then UpdateEsp() end
    end
})
Tabs.EspTab:Toggle({
    Title = gradient("GunDrop Distance ESP", Color3.fromHex("#ffff00"), Color3.fromHex("#ccaa00")),
    Default = false,
    Callback = function(state)
        ESPConfig.DistanceEspGunDrop = state
        if not state then UpdateEsp() end
    end
})

-- ESP Settings Section
Tabs.EspTab:Section({Title = gradient("ESP Settings", Color3.fromHex("#ffffff"), Color3.fromHex("#636363"))})
Tabs.EspTab:Slider({
    Title = gradient("Esp text size", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")),
    Value = {Min = 12, Max = 24, Default = 18},
    Callback = function(value)
        ESPConfig.EspTextSize = value
        for _, player in pairs(Players:GetPlayers()) do
            if NameTags[player] then
                NameTags[player].TextLabel.TextSize = value
            end
            if DistanceTags[player] then
                DistanceTags[player].TextLabel.TextSize = value
            end
        end
        if GunDrop then
            if NameTags[GunDrop] then
                NameTags[GunDrop].TextLabel.TextSize = value
            end
            if DistanceTags[GunDrop] then
                DistanceTags[GunDrop].TextLabel.TextSize = value
            end
        end
    end
})
Tabs.EspTab:Slider({
    Title = gradient("Highlight transparency", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")),
    Step = 0.1,
    Value = {Min = 0, Max = 1, Default = 0.5},
    Callback = function(value)
        ESPConfig.HighlightTransparency = value
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("Highlight") then
                player.Character.Highlight.FillTransparency = value
            end
        end
        if GunDrop and GunDrop:FindFirstChild("Highlight") then
            GunDrop.Highlight.FillTransparency = value
        end
    end
})

-- Main loop
RunService.RenderStepped:Connect(function()
    UpdateRoles()
    if ESPConfig.HighlightMurderer or ESPConfig.HighlightInnocent or ESPConfig.HighlightSheriff or
       ESPConfig.NameEspMurderer or ESPConfig.NameEspInnocent or ESPConfig.NameEspSheriff or
       ESPConfig.DistanceEspMurderer or ESPConfig.DistanceEspInnocent or ESPConfig.DistanceEspSheriff or
       ESPConfig.HighlightGunDrop or ESPConfig.NameEspGunDrop or ESPConfig.DistanceEspGunDrop then
        UpdateEsp()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        RemoveAllEsp()
    end
end)