-- WindUI
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Locals
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local CurrentCamera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local CoreGui = game:GetService("CoreGui")

function gradient(text, startColor, endColor)
    local result = ""
    local length = #text

    for i = 1, length do
        local t = (i - 1) / math.max(length - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)

        local char = text:sub(i, i)
        result = result .. "<font color=\"rgb(" .. r ..", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
    end

    return result
end

local Confirmed = false

WindUI:Popup({
    Title = gradient("SNT HUB", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Icon = "info",
    Content = gradient("This script made by", Color3.fromHex("#10eb3c"), Color3.fromHex("#67c97a")) .. gradient(" SnowT", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Buttons = {
        {
            Title = gradient("Cancel", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
            Callback = function() end,
            Variant = "Tertiary", -- Primary, Secondary, Tertiary
        },
        {
            Title = gradient("Load", Color3.fromHex("#90f09e"), Color3.fromHex("#13ed34")),
            Callback = function() Confirmed = true end,
            Variant = "Secondary", -- Primary, Secondary, Tertiary
        }
    }
})

repeat task.wait() until Confirmed

WindUI:Notify({
    Title = gradient("SNT HUB", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Content = "Скрипт успешно загружен!",
    Icon = "check-circle",
    Duration = 3,
})

-- Window
local Window = WindUI:CreateWindow({
    Title = gradient("SNT&MirrozzScript [Beta]", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Icon = "infinity",
    Author = gradient("Murder Mystery 2", Color3.fromHex("#1bf2b2"), Color3.fromHex("#1bcbf2")),
    Folder = "WindUI",
    Size = UDim2.fromOffset(300, 270),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    UserEnabled = true,
    HasOutline = true,
})

-- Open Button
Window:EditOpenButton({
    Title = "Open UI",
    Icon = "monitor",
    CornerRadius = UDim.new(2, 6),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("1E213D"),
        Color3.fromHex("1F75FE")
    ),
    Draggable = true,
})

-- Tabs
local Tabs = {
    MainTab = Window:Tab({ Title = gradient("MAIN", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "terminal" }),
    CharacterTab = Window:Tab({ Title = gradient("CHARACTER", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "file-cog" }),
    TeleportTab = Window:Tab({ Title = gradient("TELEPORT", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "user" }),
    EspTab = Window:Tab({ Title = gradient("ESP", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "eye" }),
    AimbotTab = Window:Tab({ Title = gradient("AIMBOT", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "arrow-right" }),
    AutoFarm = Window:Tab({ Title = gradient("AUTOFARM", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "user"}),
    bs = Window:Divider(),
    InnocentTab = Window:Tab({ Title = gradient("INNOCENT", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c")), Icon = "circle" 
}),
    MurderTab = Window:Tab({ Title = gradient("MURDER", Color3.fromHex("#e80909"), Color3.fromHex("#630404")), Icon = "circle"
}),
    SheriffTab = Window:Tab({
        Title = gradient("SHERIFF", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")), Icon = "circle" 
    }),
    gh = Window:Divider(),
    ServerTab = Window:Tab({ Title = gradient("SERVER", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "atom", }),
    SettingsTab = Window:Tab({ Title = gradient("SETTINGS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "code" }),
    ChangelogsTab = Window:Tab({ Title = gradient("CHANGELOGS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "info"}),
    SocialsTab = Window:Tab({ Title = gradient("SOCIALS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "star"}),
    b = Window:Divider(),
    WindowTab = Window:Tab({ Title = gradient("CONFIGURATION", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "settings", Desc = "Manage window settings and file configurations." }),
    CreateThemeTab = Window:Tab({ Title = gradient("THEMES", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "palette", Desc = "Design and apply custom themes." }),
}
-- Полная система ESP с разделением по ролям и GunDrop
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- Конфигурация ESP
local ESP_CONFIG = {
    Roles = {
        Murderer = {
            Highlight = {Color = Color3.new(1,0,0), Enabled = false},
            Name = {Size = 14, Color = Color3.new(1,1,1), Enabled = false},
            Tracer = {Color = Color3.new(1,0.2,0.2), Enabled = false},
            Distance = {Enabled = false}
        },
        Sheriff = {
            Highlight = {Color = Color3.new(0,0,1), Enabled = false},
            Name = {Size = 14, Color = Color3.new(1,1,1), Enabled = false},
            Tracer = {Color = Color3.new(0.2,0.2,1), Enabled = false},
            Distance = {Enabled = false}
        },
        Hero = {
            Highlight = {Color = Color3.new(1,1,0), Enabled = false},
            Name = {Size = 14, Color = Color3.new(1,1,1), Enabled = false},
            Tracer = {Color = Color3.new(1,1,0.5), Enabled = false},
            Distance = {Enabled = false}
        },
        Innocent = {
            Highlight = {Color = Color3.new(0,1,0), Enabled = false},
            Name = {Size = 14, Color = Color3.new(1,1,1), Enabled = false},
            Tracer = {Color = Color3.new(0.5,1,0.5), Enabled = false},
            Distance = {Enabled = false}
        }
    },
    GunDrop = {
        Highlight = {Color = Color3.new(1,0.5,0), Enabled = false},
        Name = {Size = 14, Color = Color3.new(1,1,1), Enabled = false},
        Tracer = {Color = Color3.new(1,0.7,0), Enabled = false},
        Distance = {Enabled = false}
    }
}

local ESP_OBJECTS = {
    Players = {},
    GunDrops = {}
}

-- Функции определения ролей
local function GetPlayerRole(player)
    local success, data = pcall(function()
        return ReplicatedStorage.GetPlayerData:InvokeServer()
    end)
    return success and data[player.Name] and data[player.Name].Role or "Innocent"
end

local function UpdateGunDropPosition()
    for _, instance in pairs(Workspace:GetChildren()) do
        if instance.Name == "GunDrop" then
            return instance
        end
    end
    return nil
end

-- Система рендеринга
local function CreateESPComponents(player)
    local components = {
        Highlight = Instance.new("Highlight"),
        NameGui = Instance.new("BillboardGui"),
        Tracer = Drawing.new("Line")
    }
    
    components.NameGui.Adornee = player.Character:WaitForChild("Head")
    components.NameGui.Size = UDim2.new(2, 0, 1.5, 0)
    components.NameGui.StudsOffset = Vector3.new(0, 2, 0)
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = player.Name
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Parent = components.NameGui
    
    return components
end

local function UpdatePlayerESP(player)
    if not ESP_OBJECTS.Players[player] then
        ESP_OBJECTS.Players[player] = CreateESPComponents(player)
    end
    
    local role = GetPlayerRole(player)
    local config = ESP_CONFIG.Roles[role]
    local components = ESP_OBJECTS.Players[player]
    
    -- Highlight
    components.Highlight.Enabled = config.Highlight.Enabled
    components.Highlight.FillColor = config.Highlight.Color
    components.Highlight.OutlineColor = config.Highlight.Color
    
    -- Name
    components.NameGui.Enabled = config.Name.Enabled
    components.NameGui.TextLabel.TextColor3 = config.Name.Color
    components.NameGui.TextLabel.TextSize = config.Name.Size
    
    -- Tracer
    components.Tracer.Visible = config.Tracer.Enabled
    components.Tracer.Color = config.Tracer.Color
    
    -- Distance
    if config.Distance.Enabled then
        local distance = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
        components.NameGui.TextLabel.Text = string.format("%s [%d]", player.Name, math.floor(distance))
    end
end

local function UpdateGunDropESP()
    local gunDrop = UpdateGunDropPosition()
    if gunDrop then
        if not ESP_OBJECTS.GunDrops[gunDrop] then
            ESP_OBJECTS.GunDrops[gunDrop] = {
                Highlight = Instance.new("Highlight"),
                NameGui = Instance.new("BillboardGui"),
                Tracer = Drawing.new("Line")
            }
            
            ESP_OBJECTS.GunDrops[gunDrop].NameGui.Adornee = gunDrop
            ESP_OBJECTS.GunDrops[gunDrop].NameGui.Size = UDim2.new(2, 0, 1.5, 0)
            
            local textLabel = Instance.new("TextLabel")
            textLabel.Text = "GunDrop"
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Parent = ESP_OBJECTS.GunDrops[gunDrop].NameGui
        end
        
        local config = ESP_CONFIG.GunDrop
        local components = ESP_OBJECTS.GunDrops[gunDrop]
        
        components.Highlight.Enabled = config.Highlight.Enabled
        components.Highlight.FillColor = config.Highlight.Color
        components.NameGui.Enabled = config.Name.Enabled
        components.Tracer.Visible = config.Tracer.Enabled
        components.Tracer.Color = config.Tracer.Color
        
        if config.Distance.Enabled then
            local distance = (LocalPlayer.Character.HumanoidRootPart.Position - gunDrop.Position).Magnitude
            components.NameGui.TextLabel.Text = string.format("GunDrop [%d]", math.floor(distance))
        end
    end
end

-- Интерфейс управления
local function CreateRoleControls(roleName, color)
    Tabs.EspTab:Toggle({
        Title = roleName.." Highlight",
        Default = false,
        Callback = function(state)
            ESP_CONFIG.Roles[roleName].Highlight.Enabled = state
        end
    })
    
    Tabs.EspTab:Toggle({
        Title = roleName.." Name",
        Default = false,
        Callback = function(state)
            ESP_CONFIG.Roles[roleName].Name.Enabled = state
        end
    })
    
    Tabs.EspTab:Toggle({
        Title = roleName.." Tracer",
        Default = false,
        Callback = function(state)
            ESP_CONFIG.Roles[roleName].Tracer.Enabled = state
        end
    })
    
    Tabs.EspTab:Toggle({
        Title = roleName.." Distance",
        Default = false,
        Callback = function(state)
            ESP_CONFIG.Roles[roleName].Distance.Enabled = state
        end
    })
end

-- Инициализация интерфейса
Tabs.EspTab:Section({Title = "Role ESP Settings"})
CreateRoleControls("Murderer", Color3.new(1,0,0))
CreateRoleControls("Sheriff", Color3.new(0,0,1))
CreateRoleControls("Hero", Color3.new(1,1,0))
CreateRoleControls("Innocent", Color3.new(0,1,0))

Tabs.EspTab:Section({Title = "GunDrop ESP Settings"})
Tabs.EspTab:Toggle({
    Title = "GunDrop Highlight",
    Default = false,
    Callback = function(state)
        ESP_CONFIG.GunDrop.Highlight.Enabled = state
    end
})

Tabs.EspTab:Toggle({
    Title = "GunDrop Name",
    Default = false,
    Callback = function(state)
        ESP_CONFIG.GunDrop.Name.Enabled = state
    end
})

Tabs.EspTab:Toggle({
    Title = "GunDrop Tracer",
    Default = false,
    Callback = function(state)
        ESP_CONFIG.GunDrop.Tracer.Enabled = state
    end
})

Tabs.EspTab:Toggle({
    Title = "GunDrop Distance",
    Default = false,
    Callback = function(state)
        ESP_CONFIG.GunDrop.Distance.Enabled = state
    end
})

-- Основной цикл обновления
RunService.RenderStepped:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            UpdatePlayerESP(player)
        end
    end
    UpdateGunDropESP()
end)

WindUI:Notify({
    Title = "ESP System",
    Content = "Full role-based ESP initialized!",
    Icon = "check-circle",
    Duration = 5
})