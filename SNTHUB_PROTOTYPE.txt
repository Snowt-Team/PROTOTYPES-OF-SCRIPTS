local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Настройки персонажа
local CharacterSettings = {
    WalkSpeed = {
        Value = 16,
        Default = 16,
        Locked = false
    },
    JumpPower = {
        Value = 50,
        Default = 50,
        Locked = false
    }
}

-- ESP Settings
local playerText = {}
local espSettings = {
    namesEnabled = false,
    distanceEnabled = false,
    namesColor = Color3.new(1, 1, 1),
    distanceColor = Color3.new(1, 1, 1),
}
local highlightEspSettings = {
    enabled = false,
    color = Color3.fromRGB(255, 0, 0),
    transparency = 0.5,
}
local colorOptions = {
    "White", "Red", "Blue", "Green", "Yellow"
}
local colorValues = {
    White = Color3.new(1, 1, 1),
    Red = Color3.new(1, 0, 0),
    Blue = Color3.new(0, 0, 1),
    Green = Color3.new(0, 1, 0),
    Yellow = Color3.new(1, 1, 0)
}

-- Создание окна
local Window = WindUI:CreateWindow({
    Title = "SNT HUB | Персонаж",
    Size = UDim2.fromOffset(400, 350),
    Theme = "Dark",
    Transparent = true
})

Window:EditOpenButton({
    Title = "Открыть UI",
    Icon = "monitor",
    CornerRadius = UDim.new(0, 10),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("FF0F7B"),
        Color3.fromHex("F89B29")
    ),
    Draggable = true,
})

-- Создание вкладок
local Tabs = {
    CharacterTab = Window:Tab({
        Title = "Персонаж",
        Icon = "user",
        Desc = "Управление характеристиками персонажа"
    }),
    EspTab = Window:Tab({ Title = "ESP", Icon = "eye", Desc = "Подсветка игроков." }),
    SettingsEspTab = Window:Tab({ Title = "Settings ESP", Icon = "tag", Desc = "Отображение имен игроков." }),
    SettingsTab = Window:Tab({ Title = "Настройки", Icon = "battery", Desc = "Различные настройки скрипта." }),
    AimbotTab = Window:Tab({ Title = "Аимбот", Icon = "axe", Desc = "Автонаводка на врагов" })
}

-- Функция обновления характеристик
local function updateCharacter()
    local character = LocalPlayer.Character
    if not character then return end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        pcall(function()
            if not CharacterSettings.WalkSpeed.Locked then
                humanoid.WalkSpeed = CharacterSettings.WalkSpeed.Value
            end
            if not CharacterSettings.JumpPower.Locked then
                humanoid.JumpPower = CharacterSettings.JumpPower.Value
            end
        end)
    end
end

-- Автоматическое обновление при смене персонажа
LocalPlayer.CharacterAdded:Connect(function()
    updateCharacter()
    Tabs.CharacterTab:Notify({
        Title = "Персонаж загружен",
        Text = "Настройки применены",
        Duration = 2
    })
end)

-- Элементы управления WalkSpeed
Tabs.CharacterTab:Slider({
    Title = "Скорость передвижения",
    Value = {Min = 0, Max = 200, Default = 16},
    Callback = function(value)
        CharacterSettings.WalkSpeed.Value = value
        updateCharacter()
    end
})

Tabs.CharacterTab:Button({
    Title = "Сброс скорости",
    Callback = function()
        CharacterSettings.WalkSpeed.Value = CharacterSettings.WalkSpeed.Default
        updateCharacter()
    end
})

Tabs.CharacterTab:Toggle({
    Title = "Фиксировать скорость",
    Default = false,
    Callback = function(state)
        CharacterSettings.WalkSpeed.Locked = state
        if state then
            updateCharacter()
        end
    end
})

-- Элементы управления JumpPower
Tabs.CharacterTab:Slider({
    Title = "Сила прыжка",
    Value = {Min = 0, Max = 200, Default = 50},
    Callback = function(value)
        CharacterSettings.JumpPower.Value = value
        updateCharacter()
    end
})

Tabs.CharacterTab:Button({
    Title = "Сброс прыжка",
    Callback = function()
        CharacterSettings.JumpPower.Value = CharacterSettings.JumpPower.Default
        updateCharacter()
    end
})

Tabs.CharacterTab:Toggle({
    Title = "Фиксировать прыжок",
    Default = false,
    Callback = function(state)
        CharacterSettings.JumpPower.Locked = state
        if state then
            updateCharacter()
        end
    end
})

-- Дополнительные функции персонажа
Tabs.CharacterTab:Button({
    Title = "Респавн персонажа",
    Callback = function()
        local character = LocalPlayer.Character
        if character then
            character:BreakJoints()
        end
    end
})

-- ESP Functions
local function isAlive(player)
    local character = player.Character
    if character and character:FindFirstChild("Humanoid") then
        return character:FindFirstChild("Humanoid").Health > 0
    end
    return false
end

local function getDistance(player)
    if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and
       player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        return (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
    else
        return nil
    end
end

local function createText()
    local text = Drawing.new("Text")
    text.Size = 18
    text.Outline = true
    text.Center = true
    text.Visible = false
    return text
end

local function updateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            -- Создаем/получаем текстовый объект для игрока
            if not playerText[player] then
                playerText[player] = createText()
            end

            local text = playerText[player]
            local character = player.Character
            text.Visible = false -- По умолчанию скрываем

            -- Проверяем, нужно ли вообще отображать ESP
            if (espSettings.namesEnabled or espSettings.distanceEnabled) and character then
                local head = character:FindFirstChild("Head")
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

                if head and humanoidRootPart then
                    local screenPos, onScreen = camera:WorldToViewportPoint(head.Position + Vector3.new(0, 1.5, 0))

                    if onScreen then
                        -- Формируем текст в зависимости от настроек
                        local displayText = ""
                        local color = espSettings.namesColor

                        if espSettings.namesEnabled then
                            displayText = player.Name
                        end

                        if espSettings.distanceEnabled then
                            local distance = getDistance(player)
                            if distance then
                                if displayText ~= "" then
                                    displayText = displayText .. " "
                                end
                                displayText = displayText .. "["..math.floor(distance).." studs]"
                                color = espSettings.distanceColor
                            end
                        end

                        -- Устанавливаем параметры текста
                        if displayText ~= "" then
                            text.Text = displayText
                            text.Color = color
                            text.Position = Vector2.new(screenPos.X, screenPos.Y)
                            text.Visible = true
                        end
                    end
                end
            end
        end
    end
end

local function updateHighlightESP(enabled, color, transparency)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            if isAlive(player) then
                local highlight = player.Character:FindFirstChild("Highlight")
                if enabled then
                    if not highlight then
                        local newHighlight = Instance.new("Highlight")
                        newHighlight.Parent = player.Character
                        highlight = newHighlight
                    end
                    highlight.FillColor = color
                    highlight.FillTransparency = transparency
                else
                    if highlight then
                        highlight:Destroy()
                    end
                end
            else
                local highlight = player.Character:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end
end

runService.RenderStepped:Connect(updateESP)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        task.wait(0.5)
        if highlightEspSettings.enabled then
            updateHighlightESP(true, highlightEspSettings.color, highlightEspSettings.transparency)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if playerText[player] then
        playerText[player]:Remove()
        playerText[player] = nil
    end
    if highlightEspSettings.enabled then
        updateHighlightESP(true, highlightEspSettings.color, highlightEspSettings.transparency)
    end
end)

-- ESP Tab Elements
Tabs.EspTab:Toggle({
    Title = "Highlight ESP",
    Default = false,
    Callback = function(tog)
        highlightEspSettings.enabled = tog
        updateHighlightESP(tog, highlightEspSettings.color, highlightEspSettings.transparency)
    end
})

Tabs.EspTab:Toggle({
    Title = "Включить Names ESP",
    Default = false,
    Callback = function(enabled)
        espSettings.namesEnabled = enabled
    end
})

Tabs.EspTab:Toggle({
    Title = "Включить Distance ESP",
    Default = false,
    Callback = function(enabled)
        espSettings.distanceEnabled = enabled
    end
})

-- Settings ESP Tab Elements
Tabs.SettingsEspTab:Dropdown({
    Title = "Цвет Highlight ESP",
    Values = { "Green", "Red", "Blue", "Yellow", "Pink", "Purple" },
    Value = "Red",
    Callback = function(option)
        local colors = {
            Green = Color3.fromRGB(0, 255, 0),
            Red = Color3.fromRGB(255, 0, 0),
            Blue = Color3.fromRGB(0, 0, 255),
            Yellow = Color3.fromRGB(255, 255, 0),
            Pink = Color3.fromRGB(239, 14, 216),
            Purple = Color3.fromRGB(180, 14, 240)
        }
        highlightEspSettings.color = colors[option]
        if highlightEspSettings.enabled then
            updateHighlightESP(true, highlightEspSettings.color, highlightEspSettings.transparency)
        end
    end,
})

Tabs.SettingsEspTab:Input({
    Title = "Прозрачность Highlight ESP",
    Default = 0.5,
    Placeholder = "Введите прозрачность",
    Callback = function(input)
        local value = tonumber(input)
        if typeof(value) == "number" then
            highlightEspSettings.transparency = math.clamp(value, 0, 1)
            if highlightEspSettings.enabled then
                updateHighlightESP(true, highlightEspSettings.color, highlightEspSettings.transparency)
            end
        end
    end,
})

Tabs.SettingsEspTab:Dropdown({
    Title = "Цвет Names ESP",
    Values = colorOptions,
    Value = "White",
    Callback = function(option)
        espSettings.namesColor = colorValues[option]
    end,
})

Tabs.SettingsEspTab:Dropdown({
    Title = "Цвет Distance ESP",
    Values = colorOptions,
    Value = "White",
    Callback = function(option)
        espSettings.distanceColor = colorValues[option]
    end,
})

-- Постоянное обновление персонажа (для Locked состояния)
RunService.Heartbeat:Connect(function()
    if CharacterSettings.WalkSpeed.Locked or CharacterSettings.JumpPower.Locked then
        updateCharacter()
    end
end)

-- Первоначальная настройка
if LocalPlayer.Character then
    updateCharacter()
end

Window:Open()
