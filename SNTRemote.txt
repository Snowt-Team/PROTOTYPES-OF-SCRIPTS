-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TextService = game:GetService("TextService")
local CoreGui = game:GetService("CoreGui")
local RobloxGui = CoreGui:WaitForChild("RobloxGui")
local Players = game:GetService("Players")

-- Variables
local GuiInset = RobloxGui.AbsoluteSize - RobloxGui.AbsolutePosition
local mouse = Players.LocalPlayer:GetMouse()
local layoutOrderNum = 999999999
local closed = false
local sideClosed = false
local dragging = false
local mouseDown = false
local mouseInGui = false
local logs = {}
local remoteLogs = {}
local selected = nil
local selectedLog = nil
local RemoteTemplate = nil
local FunctionTemplate = nil
local logThread = nil
local currentRightCode = nil
local currentLeftCode = nil
local running = coroutine.running
local logthread = coroutine.create
local toggle = true
local hookflag = false
local hookflag2 = false
local getnil = getnilinstances or get_nil_instances
local identify = identifyexecutor or getexecutorname
local executor = identify() or "Unknown"

-- Configuration
local SIMPLESPYCONFIG_MaxRemotes = 300
local SIMPLESPYCONFIG_AutoBlock = false
local SIMPLESPYCONFIG_Enabled = true
local SIMPLESPYCONFIG_OverrideSelection = true

-- Functions
local function Create(className, properties, children)
    local inst = Instance.new(className)
    for prop, value in pairs(properties or {}) do
        inst[prop] = value
    end
    for _, child in pairs(children or {}) do
        child.Parent = inst
    end
    return inst
end

local function logThreadFunc(thread)
    logThread = thread
    coroutine.yield()
end

local function getScript(obj)
    if not obj then return "" end
    for _, v in pairs(getnil()) do
        if v == obj then
            return "nil"
        end
    end
    return tostring(obj)
end

local function getCallingScript()
    local success, script = pcall(getScript, getcallingscript and getcallingscript())
    return success and script or "?"
end

local function clean()
    while #remoteLogs > SIMPLESPYCONFIG_MaxRemotes do
        local t = remoteLogs[#remoteLogs]
        table.remove(remoteLogs, #remoteLogs)
        t[1]:Disconnect()
        t[2]:Destroy()
    end
end

local function updateRemoteCanvas()
    LogList.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 8)
end

local function updateFunctionCanvas()
    ScrollingFrame.CanvasSize = UDim2.new(0, UIGridLayout.AbsoluteContentSize.X + 16, 0, 0)
end

local function makeToolTip(text, button)
    if not text or not button then return end
    TextLabel.Text = text
    scaleToolTip()
    ToolTip.Position = UDim2.new(0, mouse.X - GuiInset.X, 0, mouse.Y + GuiInset.Y - 10)
    ToolTip.Visible = true
end

local function scaleToolTip()
    local size = TextService:GetTextSize(TextLabel.Text, TextLabel.TextSize, TextLabel.Font, Vector2.new(184, math.huge))
    TextLabel.Size = UDim2.new(0, size.X, 0, size.Y)
    ToolTip.Size = UDim2.new(0, size.X + 16, 0, size.Y + 16)
end

local function validateSize()
    if closed then
        TweenService:Create(Background, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, sideClosed and 140 or 450, 0, 40)
        }):Play()
    else
        TweenService:Create(Background, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, sideClosed and 140 or 450, 0, 300)
        }):Play()
    end
end

local function minimizeSize(speed)
    if not speed then speed = 0.3 end
    closed = true
    validateSize()
    TweenService:Create(LeftPanel, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 140, 0, 0)}):Play()
    TweenService:Create(RightPanel, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, sideClosed and 0 or 310, 0, 0)}):Play()
    TweenService:Create(ScrollingFrame, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0, 0, 0, 0)}):Play()
    TweenService:Create(CodeBox, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 0, 0, 0)}):Play()
    TweenService:Create(LogList, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 0, 0, 0)}):Play()
end

local function maximizeSize(speed)
    if not speed then speed = 0.3 end
    closed = false
    validateSize()
    TweenService:Create(LeftPanel, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 140, 0, 260)}):Play()
    TweenService:Create(RightPanel, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(0, sideClosed and 0 or 310, 0, 260)}):Play()
    TweenService:Create(ScrollingFrame, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(1, 0, 0.4, -8), Position = UDim2.new(0, 0, 0.6, 8)}):Play()
    TweenService:Create(CodeBox, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(1, 0, 0.6, 0)}):Play()
    TweenService:Create(LogList, TweenInfo.new(speed, Enum.EasingStyle.Quad), {Size = UDim2.new(1, 0, 1, -48)}):Play()
end

local function bringBackOnResize()
    validateSize()
    if sideClosed then
        minimizeSize()
    else
        maximizeSize()
    end
    local viewportSize = workspace.CurrentCamera.ViewportSize
    local scale = math.min(viewportSize.X / 450, viewportSize.Y / 300)
    Scale.Scale = math.clamp(scale, 0.7, 1)
    local currentX = Background.AbsolutePosition.X
    local currentY = Background.AbsolutePosition.Y
    if (currentX < 0) or (currentX > (viewportSize.X - (sideClosed and 140 or Background.AbsoluteSize.X))) then
        currentX = math.clamp(currentX, 0, viewportSize.X - (sideClosed and 140 or Background.AbsoluteSize.X))
    end
    if (currentY < 0) or (currentY > (viewportSize.Y - (closed and 40 or Background.AbsoluteSize.Y) - GuiInset.Y)) then
        currentY = math.clamp(currentY, 0, viewportSize.Y - (closed and 40 or Background.AbsoluteSize.Y) - GuiInset.Y)
    end
    TweenService:Create(Background, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Position = UDim2.new(0, currentX, 0, currentY)
    }):Play()
end

local function eventSelect(log)
    if selected then
        TweenService:Create(selected.Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(31, 41, 55)}):Play()
    end
    selected = log
    TweenService:Create(log.Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(59, 130, 246)}):Play()
    selectedLog = log
    currentRightCode = log.GenScript
    currentLeftCode = log.Function
end

local function newButton(name, description, onClick)
    local FunctionTemplate = Create("Frame", {
        Name = "FunctionTemplate",
        Parent = ScrollingFrame,
        BackgroundTransparency = 1,
        Size = UDim2.new(0, 40, 0, 40)
    })
    local Button = Create("TextButton", {
        Name = "Button",
        Parent = FunctionTemplate,
        BackgroundColor3 = Color3.fromRGB(37, 99, 235),
        Size = UDim2.new(0, 40, 0, 40),
        Font = Enum.Font.GothamBold,
        Text = name:sub(1, 1),
        TextColor3 = Color3.new(1, 1, 1),
        TextSize = 16,
        AutoButtonColor = false
    }, {
        Create("UICorner", {CornerRadius = UDim.new(1, 0)})
    })
    Button.MouseEnter:Connect(function()
        makeToolTip(true, description())
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(59, 130, 246)}):Play()
    end)
    Button.MouseLeave:Connect(function()
        makeToolTip(false)
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(37, 99, 235)}):Play()
    end)
    FunctionTemplate.AncestryChanged:Connect(function()
        makeToolTip(false)
    end)
    Button.MouseButton1Click:Connect(function(...)
        logthread(running())
        onClick(FunctionTemplate, ...)
    end)
    updateFunctionCanvas()
end

local function newRemote(type, data)
    if layoutOrderNum < 1 then layoutOrderNum = 999999999 end
    local remote = data.remote
    local callingscript = data.callingscript
    local RemoteTemplate = Create("Frame", {
        LayoutOrder = layoutOrderNum,
        Name = "RemoteTemplate",
        Parent = LogList,
        BackgroundTransparency = 1,
        Size = UDim2.new(0, 132, 0, 28)
    })
    local ColorBar = Create("Frame", {
        Name = "ColorBar",
        Parent = RemoteTemplate,
        BackgroundColor3 = (type == "event" and Color3.fromRGB(234, 179, 8)) or Color3.fromRGB(59, 130, 246),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 4, 0, 4),
        Size = UDim2.new(0, 8, 0, 20),
        ZIndex = 2
    }, {
        Create("UICorner", {CornerRadius = UDim.new(1, 0)})
    })
    local Text = Create("TextLabel", {
        TextTruncate = Enum.TextTruncate.AtEnd,
        Name = "Text",
        Parent = RemoteTemplate,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 16, 0, 4),
        Size = UDim2.new(0, 108, 0, 20),
        ZIndex = 2,
        Font = Enum.Font.Gotham,
        Text = remote.Name,
        TextColor3 = Color3.new(1, 1, 1),
        TextSize = 14,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    local Button = Create("TextButton", {
        Name = "Button",
        Parent = RemoteTemplate,
        BackgroundColor3 = Color3.fromRGB(31, 41, 55),
        BackgroundTransparency = 0.5,
        BorderSizePixel = 0,
        Position = UDim2.new(0, 4, 0, 4),
        Size = UDim2.new(0, 124, 0, 20),
        AutoButtonColor = false,
        Font = Enum.Font.Gotham,
        Text = "",
        TextColor3 = Color3.new(0, 0, 0),
        TextSize = 14
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0, 6)})
    })
    local log = {
        Name = remote.Name,
        Function = data.infofunc or "--Function Info is disabled",
        Remote = remote,
        DebugId = data.id,
        metamethod = data.metamethod,
        args = data.args,
        Log = RemoteTemplate,
        Button = Button,
        Blocked = data.blocked,
        Source = callingscript,
        returnvalue = data.returnvalue,
        GenScript = "-- Generating, please wait...\n-- (If this message persists, the remote args are likely extremely long)"
    }
    logs[#logs + 1] = log
    local connect = Button.MouseButton1Click:Connect(function()
        logthread(running())
        eventSelect(RemoteTemplate)
        log.GenScript = genScript(log.Remote, log.args)
        if data.blocked then
            log.GenScript = "-- THIS REMOTE WAS PREVENTED FROM FIRING TO THE SERVER BY SIMPLESPY\n\n" .. log.GenScript
        end
        if selected == log and RemoteTemplate then
            eventSelect(RemoteTemplate)
        end
    end)
    Button.MouseEnter:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(55, 65, 81)}):Play()
    end)
    Button.MouseLeave:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(31, 41, 55)}):Play()
    end)
    layoutOrderNum -= 1
    table.insert(remoteLogs, 1, {connect, RemoteTemplate})
    clean()
    updateRemoteCanvas()
end

local function genScript(remote, args)
    local scriptStr = "local remote = " .. getScript(remote) .. "\nremote:"
    if remote:IsA("RemoteEvent") then
        scriptStr = scriptStr .. "FireServer("
    elseif remote:IsA("RemoteFunction") then
        scriptStr = scriptStr .. "InvokeServer("
    end
    for i, v in pairs(args) do
        scriptStr = scriptStr .. tostring(v)
        if i < #args then
            scriptStr = scriptStr .. ", "
        end
    end
    scriptStr = scriptStr .. ")"
    return scriptStr
end

-- GUI Setup
local SimpleSpy3 = Create("ScreenGui", {
    Parent = CoreGui,
    ResetOnSpawn = false,
    IgnoreGuiInset = true
})
local Scale = Create("UIScale", {
    Parent = SimpleSpy3,
    Scale = 1
})
local Storage = Create("Folder", {
    Parent = SimpleSpy3
})
local Background = Create("Frame", {
    Parent = SimpleSpy3,
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 0.2,
    Position = UDim2.new(0, 500, 0, 200),
    Size = UDim2.new(0, 450, 0, 300),
    ClipsDescendants = true
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 16)})
})
local TopBar = Create("Frame", {
    Parent = Background,
    BackgroundColor3 = Color3.fromRGB(17, 24, 39),
    BackgroundTransparency = 0.1,
    BorderSizePixel = 0,
    Size = UDim2.new(0, 450, 0, 40)
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 12)})
})
local Simple = Create("TextButton", {
    Parent = TopBar,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 12, 0, 0),
    Size = UDim2.new(0, 100, 0, 40),
    Font = Enum.Font.GothamBold,
    Text = "SimpleSpy V3",
    TextColor3 = Color3.new(1, 1, 1),
    TextSize = 16,
    TextXAlignment = Enum.TextXAlignment.Left,
    AutoButtonColor = false
})
local CloseButton = Create("TextButton", {
    Parent = TopBar,
    BackgroundColor3 = Color3.fromRGB(220, 38, 38),
    BorderSizePixel = 0,
    Position = UDim2.new(1, -44, 0, 4),
    Size = UDim2.new(0, 32, 0, 32),
    Font = Enum.Font.SourceSans,
    Text = "",
    TextColor3 = Color3.new(0, 0, 0),
    TextSize = 14
}, {
    Create("UICorner", {CornerRadius = UDim.new(1, 0)}),
    Create("ImageLabel", {
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 8, 0, 8),
        Size = UDim2.new(0, 16, 0, 16),
        Image = "http://www.roblox.com/asset/?id=5597086202"
    })
})
local MaximizeButton = Create("TextButton", {
    Parent = TopBar,
    BackgroundColor3 = Color3.fromRGB(55, 65, 81),
    BorderSizePixel = 0,
    Position = UDim2.new(1, -88, 0, 4),
    Size = UDim2.new(0, 32, 0, 32),
    Font = Enum.Font.SourceSans,
    Text = "",
    TextColor3 = Color3.new(0, 0, 0),
    TextSize = 14
}, {
    Create("UICorner", {CornerRadius = UDim.new(1, 0)}),
    Create("ImageLabel", {
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 8, 0, 8),
        Size = UDim2.new(0, 16, 0, 16),
        Image = "http://www.roblox.com/asset/?id=5597108117"
    })
})
local MinimizeButton = Create("TextButton", {
    Parent = TopBar,
    BackgroundColor3 = Color3.fromRGB(55, 65, 81),
    BorderSizePixel = 0,
    Position = UDim2.new(1, -132, 0, 4),
    Size = UDim2.new(0, 32, 0, 32),
    Font = Enum.Font.SourceSans,
    Text = "",
    TextColor3 = Color3.new(0, 0, 0),
    TextSize = 14
}, {
    Create("UICorner", {CornerRadius = UDim.new(1, 0)}),
    Create("ImageLabel", {
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 8, 0, 8),
        Size = UDim2.new(0, 16, 0, 16),
        Image = "http://www.roblox.com/asset/?id=5597105827"
    })
})
local LeftPanel = Create("Frame", {
    Parent = Background,
    BackgroundColor3 = Color3.fromRGB(17, 24, 39),
    BackgroundTransparency = 0.1,
    BorderSizePixel = 0,
    Position = UDim2.new(0, 0, 0, 40),
    Size = UDim2.new(0, 140, 0, 260)
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 12)})
})
local SearchBar = Create("TextBox", {
    Parent = LeftPanel,
    BackgroundColor3 = Color3.fromRGB(31, 41, 55),
    BackgroundTransparency = 0.2,
    Size = UDim2.new(1, -8, 0, 32),
    Position = UDim2.new(0, 4, 0, 4),
    Font = Enum.Font.Gotham,
    PlaceholderText = "Search remotes...",
    Text = "",
    TextColor3 = Color3.new(1, 1, 1),
    TextSize = 14,
    ClearTextOnFocus = false
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 8)})
})
local LogList = Create("ScrollingFrame", {
    Parent = LeftPanel,
    Active = true,
    BackgroundTransparency = 1,
    BorderSizePixel = 0,
    Position = UDim2.new(0, 0, 0, 40),
    Size = UDim2.new(1, 0, 1, -48),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollBarThickness = 4,
    ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
})
local UIListLayout = Create("UIListLayout", {
    Parent = LogList,
    HorizontalAlignment = Enum.HorizontalAlignment.Center,
    SortOrder = Enum.SortOrder.LayoutOrder,
    Padding = UDim.new(0, 4)
})
local RightPanel = Create("Frame", {
    Parent = Background,
    BackgroundColor3 = Color3.fromRGB(17, 24, 39),
    BackgroundTransparency = 0.1,
    BorderSizePixel = 0,
    Position = UDim2.new(0, 140, 0, 40),
    Size = UDim2.new(0, 310, 0, 260)
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 12)})
})
local CodeBox = Create("Frame", {
    Parent = RightPanel,
    BackgroundColor3 = Color3.fromRGB(31, 41, 55),
    BackgroundTransparency = 0.2,
    BorderSizePixel = 0,
    Size = UDim2.new(1, 0, 0.6, 0)
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 8)})
})
local ScrollingFrame = Create("ScrollingFrame", {
    Parent = RightPanel,
    Active = true,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0.6, 8),
    Size = UDim2.new(1, 0, 0.4, -8),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollBarThickness = 4,
    ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
})
local UIGridLayout = Create("UIGridLayout", {
    Parent = ScrollingFrame,
    HorizontalAlignment = Enum.HorizontalAlignment.Center,
    SortOrder = Enum.SortOrder.LayoutOrder,
    CellPadding = UDim2.new(0, 8, 0, 8),
    CellSize = UDim2.new(0, 40, 0, 40)
})
local ToolTip = Create("Frame", {
    Parent = SimpleSpy3,
    BackgroundColor3 = Color3.fromRGB(31, 41, 55),
    BackgroundTransparency = 0.1,
    BorderColor3 = Color3.fromRGB(55, 65, 81),
    Size = UDim2.new(0, 200, 0, 50),
    ZIndex = 10,
    Visible = false
}, {
    Create("UICorner", {CornerRadius = UDim.new(0, 8)})
})
local TextLabel = Create("TextLabel", {
    Parent = ToolTip,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 8, 0, 8),
    Size = UDim2.new(0, 184, 0, 34),
    ZIndex = 10,
    Font = Enum.Font.Gotham,
    Text = "Tooltip text",
    TextColor3 = Color3.new(1, 1, 1),
    TextSize = 14,
    TextWrapped = true,
    TextXAlignment = Enum.TextXAlignment.Left,
    TextYAlignment = Enum.TextYAlignment.Top
})

-- Search Functionality
local lastQuery = ""
SearchBar:GetPropertyChangedSignal("Text"):Connect(function()
    local query = SearchBar.Text:lower()
    if query == lastQuery then return end
    lastQuery = query
    task.delay(0.3, function()
        if SearchBar.Text:lower() ~= query then return end
        for _, v in pairs(LogList:GetChildren()) do
            if v:IsA("Frame") then
                local textLabel = v:FindFirstChild("Text")
                v.Visible = textLabel and textLabel.Text:lower():find(query) ~= nil
            end
        end
        updateRemoteCanvas()
    end)
end)

-- Hover Effects
local function addHoverEffect(button, normalColor, hoverColor)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = normalColor}):Play()
    end)
end
addHoverEffect(CloseButton, Color3.fromRGB(220, 38, 38), Color3.fromRGB(239, 68, 68))
addHoverEffect(MaximizeButton, Color3.fromRGB(55, 65, 81), Color3.fromRGB(75, 85, 101))
addHoverEffect(MinimizeButton, Color3.fromRGB(55, 65, 81), Color3.fromRGB(75, 85, 101))
addHoverEffect(Simple, Color3.fromRGB(0, 0, 0), Color3.fromRGB(0, 0, 0)) -- Maintain transparency

-- Button Connections
CloseButton.MouseButton1Click:Connect(function()
    logthread(running())
    SimpleSpy3.Enabled = false
end)
MaximizeButton.MouseButton1Click:Connect(function()
    logthread(running())
    sideClosed = not sideClosed
    if sideClosed then
        minimizeSize()
    else
        maximizeSize()
    end
    bringBackOnResize()
end)
MinimizeButton.MouseButton1Click:Connect(function()
    logthread(running())
    if closed then
        maximizeSize()
    else
        minimizeSize()
    end
    bringBackOnResize()
end)

-- Dragging
Simple.MouseButton1Down:Connect(function()
    logthread(running())
    dragging = true
    mouseDown = true
end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
        mouseDown = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        mouseInGui = Background:IsAncestorOf(mouse.Target)
        if dragging and mouseDown then
            local delta = input.Position - Vector3.new(mouse.X, mouse.Y, 0)
            TweenService:Create(Background, TweenInfo.new(0.1), {
                Position = UDim2.new(0, Background.Position.X.Offset + delta.X, 0, Background.Position.Y.Offset + delta.Y)
            }):Play()
        end
    end
end)

-- Remote Hooking
local function hookRemote(remote, method, args)
    local callingscript = getCallingScript()
    local data = {
        remote = remote,
        callingscript = callingscript,
        infofunc = "--Function Info is disabled",
        args = args,
        blocked = SIMPLESPYCONFIG_AutoBlock,
        returnvalue = nil,
        id = remote:GetDebugId()
    }
    newRemote(method, data)
end

local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    if not SIMPLESPYCONFIG_Enabled then return oldNamecall(self, ...) end
    local method = getnamecallmethod()
    if (method == "FireServer" or method == "InvokeServer") and self:IsA("RemoteEvent") or self:IsA("RemoteFunction") then
        hookRemote(self, method == "FireServer" and "event" or "function", {...})
    end
    return oldNamecall(self, ...)
end)

-- Initialize Buttons
newButton("Copy Code", function() return "Copy the code that executed this remote" end, function()
    setclipboard(currentRightCode or "")
end)
newButton("Run Code", function() return "Run the code that executed this remote" end, function()
    loadstring(currentRightCode or "")()
end)
newButton("Clear Logs", function() return "Clear all logged remotes" end, function()
    for _, v in pairs(remoteLogs) do
        v[1]:Disconnect()
        v[2]:Destroy()
    end
    remoteLogs = {}
    logs = {}
    selected = nil
    selectedLog = nil
    updateRemoteCanvas()
end)
newButton("Exclude", function() return "Exclude this remote from logs" end, function()
    if selectedLog then
        SIMPLESPYCONFIG_AutoBlock = true
        selectedLog.Blocked = true
    end
end)

-- Final Setup
bringBackOnResize()
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        mouseInGui = Background:IsAncestorOf(mouse.Target)
    end
end)
RunService:BindToRenderStep("SimpleSpy", 1, function()
    if mouseInGui then
        ToolTip.Position = UDim2.new(0, mouse.X - GuiInset.X, 0, mouse.Y + GuiInset.Y - 10)
    end
end)